version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: family-tree-db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-familytree}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-family_tree}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-familytree}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: family-tree-redis
    restart: unless-stopped
    ports:
      - "${REDIS_PORT:-6379}:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: family-tree-app
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://${POSTGRES_USER:-familytree}:${POSTGRES_PASSWORD:-password}@postgres:5432/${POSTGRES_DB:-family_tree}
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET}
      API_PORT: ${API_PORT:-8000}
    ports:
      - "${API_PORT:-8000}:8000"
    volumes:
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8000/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Nginx Web Server
  nginx:
    image: nginx:alpine
    container_name: family-tree-nginx
    restart: unless-stopped
    depends_on:
      - app
    ports:
      - "${HTTP_PORT:-80}:80"
      - "${HTTPS_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./frontend/dist:/usr/share/nginx/html
      - ./nginx/ssl:/etc/nginx/ssl
      - nginx_logs:/var/log/nginx
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Development services
  postgres-test:
    image: postgres:15-alpine
    container_name: family-tree-db-test
    profiles: ["test"]
    environment:
      POSTGRES_USER: familytree
      POSTGRES_PASSWORD: password
      POSTGRES_DB: family_tree_test
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data

  # Backup service
  backup:
    image: postgres:15-alpine
    container_name: family-tree-backup
    profiles: ["backup"]
    depends_on:
      - postgres
    environment:
      PGPASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - ./backups:/backups
    command: >
      sh -c "
        while true; do
          echo 'Starting backup...'
          pg_dump -h postgres -U ${POSTGRES_USER:-familytree} ${POSTGRES_DB:-family_tree} > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
          echo 'Backup completed'
          sleep 86400
        done
      "

volumes:
  postgres_data:
  postgres_test_data:
  redis_data:
  nginx_logs:

networks:
  default:
    name: family-tree-network